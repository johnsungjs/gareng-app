2023-07-14 14:50:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-14 14:50:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-14 14:50:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-14 14:53:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-14 15:18:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-14 15:32:10 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-14 15:39:29 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Value too long for column "GENDER CHARACTER VARYING(6)": "'malessss' (8)"; SQL statement:
update USERS set address=?,age=?,email=?,gender=?,password=?,username=?,uuid=? where id=? [22001-214]
2023-07-14 15:39:52 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-14 15:42:41 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-14 15:44:29 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Value too long for column "GENDER CHARACTER VARYING(6)": "'priaaaaaa' (9)"; SQL statement:
update USERS set address=?,age=?,email=?,gender=?,password=?,username=?,uuid=? where id=? [22001-214]
2023-07-14 15:44:43 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-14 15:44:51 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Value too long for column "GENDER CHARACTER VARYING(6)": "'priaaaaaa' (9)"; SQL statement:
update USERS set address=?,age=?,email=?,gender=?,password=?,username=?,uuid=? where id=? [22001-214]
2023-07-14 15:45:20 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-14 15:45:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Value too long for column "GENDER CHARACTER VARYING(6)": "'priadddd' (8)"; SQL statement:
update USERS set address=?,age=?,email=?,gender=?,password=?,username=?,uuid=? where id=? [22001-214]
2023-07-14 15:45:46 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-14 15:45:52 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Value too long for column "GENDER CHARACTER VARYING(6)": "'priaaaa' (7)"; SQL statement:
update USERS set address=?,age=?,email=?,gender=?,password=?,username=?,uuid=? where id=? [22001-214]
2023-07-14 15:47:46 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-14 15:48:00 jdbc[17]: exception
org.h2.jdbc.JdbcSQLDataException: Value too long for column "GENDER CHARACTER VARYING(6)": "'prinita' (7)"; SQL statement:
update USERS set address=?,age=?,email=?,gender=?,password=?,username=?,uuid=? where id=? [22001-214]
2023-07-14 15:48:35 jdbc[22]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-14 16:06:28 jdbc[23]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-14 16:12:02 jdbc[24]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-18 09:23:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-18 09:47:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-18 09:59:09 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-18 10:14:03 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-18 10:42:16 jdbc[23]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-18 10:57:03 jdbc[33]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-18 11:03:17 jdbc[33]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-18 13:09:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-18 13:35:43 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-18 13:52:37 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-07-18 13:59:11 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-08-31 09:33:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO TRANSACTIONHEADER(`id`,`transactionDate`,`payment`,`paymentmethod`,`UUID`) VALUES('1','31-08-2023','50000','cash','88fc35f8-c8c4-47f4-b134-00b3754142ci') [*]CREATE TABLE IF NOT EXISTS `TransactionDetail`( `id` bigint primary key auto_increment, `transactionHeaderId` bigint not null, `itemId` bigint not null, `amount` int, foreign key(`transactionHeaderId`) references `TransactionHeader`(`id`), foreign key(`itemId`) references `items`(`id`) )"; SQL statement:
INSERT INTO TRANSACTIONHEADER(`id`,`transactionDate`,`payment`,`paymentmethod`,`UUID`) VALUES('1','31-08-2023','50000','cash','88fc35f8-c8c4-47f4-b134-00b3754142ci') CREATE TABLE IF NOT EXISTS `TransactionDetail`( `id` bigint primary key auto_increment, `transactionHeaderId` bigint not null, `itemId` bigint not null, `amount` int, foreign key(`transactionHeaderId`) references `TransactionHeader`(`id`), foreign key(`itemId`) references `items`(`id`) ) [42000-214]
2023-08-31 09:36:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO TRANSACTIONHEADER(`id`,`transactionDate`,`payment`,`paymentmethod`,`UUID`) VALUES('1','31-08-2023',50000,'cash','88fc35f8-c8c4-47f4-b134-00b3754142ci') [*]CREATE TABLE IF NOT EXISTS `TransactionDetail`( `id` bigint primary key auto_increment, `transactionHeaderId` bigint not null, `itemId` bigint not null, `amount` int, foreign key(`transactionHeaderId`) references `TransactionHeader`(`id`), foreign key(`itemId`) references `items`(`id`) )"; SQL statement:
INSERT INTO TRANSACTIONHEADER(`id`,`transactionDate`,`payment`,`paymentmethod`,`UUID`) VALUES('1','31-08-2023',50000,'cash','88fc35f8-c8c4-47f4-b134-00b3754142ci') CREATE TABLE IF NOT EXISTS `TransactionDetail`( `id` bigint primary key auto_increment, `transactionHeaderId` bigint not null, `itemId` bigint not null, `amount` int, foreign key(`transactionHeaderId`) references `TransactionHeader`(`id`), foreign key(`itemId`) references `items`(`id`) ) [42000-214]
2023-08-31 09:40:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Cannot parse "TIMESTAMP" constant "31-08-2023"; SQL statement:
INSERT INTO TRANSACTIONHEADER(`id`,`transactionDate`,`payment`,`paymentmethod`,`UUID`) VALUES('1','31-08-2023','50000','cash','88fc35f8-c8c4-47f4-b134-00b3754142ci') [22007-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:506)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:88)
	at org.h2.value.Value.convertToTimestamp(Value.java:1980)
	at org.h2.value.Value.convertTo(Value.java:1153)
	at org.h2.value.Value.convertForAssignTo(Value.java:1092)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:369)
	at org.h2.table.Table.convertInsertRow(Table.java:926)
	at org.h2.command.dml.Insert.insertRows(Insert.java:167)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.dml.DataChangeStatement.update(DataChangeStatement.java:74)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:252)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:733)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:435)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:311)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1305)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1294)
	at com.gareng.app.gareng.GarengApplication.main(GarengApplication.java:10)
Caused by: java.lang.IllegalArgumentException: 31-8-2023
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:194)
	at org.h2.util.DateTimeUtils.parseTimestamp(DateTimeUtils.java:338)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:86)
	... 43 more
2023-08-31 09:42:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO TRANSACTIONHEADER(`id`,`transactionDate`,`payment`,`paymentmethod`,`UUID`) VALUES('1','2023-08-31','50000','cash','88fc35f8-c8c4-47f4-b134-00b3754142ci') [*]CREATE TABLE IF NOT EXISTS `TransactionDetail`( `id` bigint primary key auto_increment, `transactionHeaderId` bigint not null, `itemId` bigint not null, `amount` int, foreign key(`transactionHeaderId`) references `TransactionHeader`(`id`), foreign key(`itemId`) references `items`(`id`) )"; SQL statement:
INSERT INTO TRANSACTIONHEADER(`id`,`transactionDate`,`payment`,`paymentmethod`,`UUID`) VALUES('1','2023-08-31','50000','cash','88fc35f8-c8c4-47f4-b134-00b3754142ci') CREATE TABLE IF NOT EXISTS `TransactionDetail`( `id` bigint primary key auto_increment, `transactionHeaderId` bigint not null, `itemId` bigint not null, `amount` int, foreign key(`transactionHeaderId`) references `TransactionHeader`(`id`), foreign key(`itemId`) references `items`(`id`) ) [42000-214]
2023-08-31 09:47:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO TRANSACTIONHEADER(`id`,`transactionDate`,`payment`,`paymentmethod`,`UUID`) VALUES('1','2023-08-31','50000','cash','88fc35f8-c8c4-47f4-b134-00b3754142ci') [*]CREATE TABLE IF NOT EXISTS `TransactionDetail`( `id` bigint primary key auto_increment, `transactionHeaderId` bigint not null, `itemId` bigint not null, `amount` int, foreign key(`transactionHeaderId`) references `TransactionHeader`(`id`), foreign key(`itemId`) references `items`(`id`) )"; SQL statement:
INSERT INTO TRANSACTIONHEADER(`id`,`transactionDate`,`payment`,`paymentmethod`,`UUID`) VALUES('1','2023-08-31','50000','cash','88fc35f8-c8c4-47f4-b134-00b3754142ci') CREATE TABLE IF NOT EXISTS `TransactionDetail`( `id` bigint primary key auto_increment, `transactionHeaderId` bigint not null, `itemId` bigint not null, `amount` int, foreign key(`transactionHeaderId`) references `TransactionHeader`(`id`), foreign key(`itemId`) references `items`(`id`) ) [42000-214]
2023-08-31 09:49:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO TRANSACTIONHEADER(`id`,`transactionDate`,`payment`,`paymentmethod`,`UUID`) VALUES('1','2023-08-31','50000','cash','88fc35f8-c8c4-47f4-b134-00b3754142ci') [*]CREATE TABLE IF NOT EXISTS `TransactionDetail`( `id` bigint primary key auto_increment, `transactionHeaderId` bigint not null, `itemId` bigint not null, `amount` int, foreign key(`transactionHeaderId`) references `TransactionHeader`(`id`), foreign key(`itemId`) references `items`(`id`) )"; SQL statement:
INSERT INTO TRANSACTIONHEADER(`id`,`transactionDate`,`payment`,`paymentmethod`,`UUID`) VALUES('1','2023-08-31','50000','cash','88fc35f8-c8c4-47f4-b134-00b3754142ci') CREATE TABLE IF NOT EXISTS `TransactionDetail`( `id` bigint primary key auto_increment, `transactionHeaderId` bigint not null, `itemId` bigint not null, `amount` int, foreign key(`transactionHeaderId`) references `TransactionHeader`(`id`), foreign key(`itemId`) references `items`(`id`) ) [42000-214]
2023-08-31 09:50:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "ITEMS" because "CONSTRAINT_AF6" depends on it; SQL statement:
DROP TABLE IF EXISTS `ITEMS` [90107-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:632)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:97)
	at org.h2.command.ddl.DropTable.update(DropTable.java:121)
	at org.h2.command.CommandContainer.update(CommandContainer.java:169)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:252)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:941)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:733)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:435)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:311)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1305)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1294)
	at com.gareng.app.gareng.GarengApplication.main(GarengApplication.java:10)
2023-09-09 17:36:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-09 17:36:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO TRANSACTIONHEADER(`transactionDate`,`payment`,`paymentmethod`,`UUID`,`userUUID`) VALUES(?,?,?,?,?) [90002-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.Prepared.query(Prepared.java:256)
	at org.h2.command.CommandContainer.query(CommandContainer.java:251)
	at org.h2.command.Command.executeQuery(Command.java:190)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:128)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:239)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:163)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getMetaData(AbstractResultSetAccess.java:36)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getColumnCount(AbstractResultSetAccess.java:52)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:193)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:478)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:267)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:168)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:93)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:97)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:367)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:473)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:148)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy131.saveHeader(Unknown Source)
	at com.gareng.app.gareng.helper.TransactionHelper.addTransaction(TransactionHelper.java:41)
	at com.gareng.app.gareng.Controller.TransactionController.addTransaction(TransactionController.java:55)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-09 17:39:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Method is only allowed for a query. Use execute or executeUpdate instead of executeQuery; SQL statement:
INSERT INTO TRANSACTIONHEADER(`transactionDate`,`payment`,`paymentmethod`,`UUID`,`userUUID`) VALUES(?,?,?,?,?) [90002-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.Prepared.query(Prepared.java:256)
	at org.h2.command.CommandContainer.query(CommandContainer.java:251)
	at org.h2.command.Command.executeQuery(Command.java:190)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:128)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:239)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:163)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getMetaData(AbstractResultSetAccess.java:36)
	at org.hibernate.sql.results.jdbc.internal.AbstractResultSetAccess.getColumnCount(AbstractResultSetAccess.java:52)
	at org.hibernate.query.results.ResultSetMappingImpl.resolve(ResultSetMappingImpl.java:193)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:478)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:267)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:168)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.list(JdbcSelectExecutorStandardImpl.java:93)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:31)
	at org.hibernate.query.sql.internal.NativeSelectQueryPlanImpl.performList(NativeSelectQueryPlanImpl.java:97)
	at org.hibernate.query.sql.internal.NativeQueryImpl.doList(NativeQueryImpl.java:621)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:367)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:473)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:148)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:134)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy131.saveHeader(Unknown Source)
	at com.gareng.app.gareng.helper.TransactionHelper.addTransaction(TransactionHelper.java:41)
	at com.gareng.app.gareng.Controller.TransactionController.addTransaction(TransactionController.java:55)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:207)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:152)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-12 15:28:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-12 15:29:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-12 15:29:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-12 15:39:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-12 15:50:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-12 16:23:26 jdbc[23]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-12 16:30:44 jdbc[23]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-14 18:30:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-14 18:41:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-15 14:51:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-15 14:58:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-15 14:58:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-15 14:59:28 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-15 15:03:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-15 15:04:50 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-19 19:46:30 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-19 19:49:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-19 19:51:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-19 19:55:26 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-19 20:09:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-20 08:13:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-20 08:29:41 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-20 08:34:15 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-20 08:36:13 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-20 08:38:24 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-20 08:39:51 jdbc[14]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-20 08:54:21 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-20 09:07:53 jdbc[24]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-20 09:20:00 jdbc[23]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-20 09:30:49 jdbc[23]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-20 09:37:02 jdbc[33]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-21 08:22:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-21 08:33:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-21 08:40:49 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-21 08:58:35 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-21 09:15:20 jdbc[23]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-21 09:28:11 jdbc[24]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-21 09:38:29 jdbc[25]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-21 09:45:57 jdbc[34]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-21 09:57:57 jdbc[34]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-26 11:53:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-26 11:58:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-26 12:01:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-26 13:05:53 jdbc[23]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-26 13:20:40 jdbc[33]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-26 14:37:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-26 15:00:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-26 15:12:25 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-26 15:23:01 jdbc[14]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-26 15:56:33 jdbc[23]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-26 16:01:39 jdbc[23]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-27 08:55:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-27 09:09:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-27 09:23:25 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-27 09:26:16 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-27 09:42:14 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-28 09:06:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-28 09:21:54 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-28 09:53:50 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-28 09:57:42 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-28 10:10:34 jdbc[23]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-29 08:26:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-29 08:39:35 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-29 08:51:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-29 09:15:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-29 09:20:54 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-29 09:24:24 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-29 09:31:24 jdbc[14]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-29 13:42:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-29 14:03:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-29 14:15:13 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-29 14:50:23 jdbc[23]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-29 15:08:38 jdbc[23]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
2023-09-29 15:55:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-214]
